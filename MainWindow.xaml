<Window x:Class="F95UpdatesChecker.MainWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:i="http://schemas.microsoft.com/xaml/behaviors"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:local="clr-namespace:F95UpdatesChecker"
        xmlns:theme="clr-namespace:Microsoft.Windows.Themes;assembly=PresentationFramework.Aero2"
        mc:Ignorable="d"
        Title="F95UpdatesChecker"
        Height="600"
        MinHeight="400"
        Width="1300"
        MinWidth="1000"
        Loaded="Window_Loaded"
        Closing="Window_Closing"
        x:Name="mainWindow"
        Focusable="True">
    <Window.Resources>
        <ResourceDictionary x:Uid="ResourceDictionary_3">
            <ResourceDictionary.MergedDictionaries>
                <ResourceDictionary Source="/Resources/Icons.xaml" />
            </ResourceDictionary.MergedDictionaries>
            <Style x:Key="buttonStyle"
                   TargetType="Button"
                   BasedOn="{StaticResource {x:Type Button}}">
                <Setter Property="Height"
                        Value="30" />
                <Setter Property="Width"
                        Value="30" />
                <Style.Resources>
                    <Style TargetType="Border">
                        <Setter Property="CornerRadius"
                                Value="3" />
                    </Style>
                </Style.Resources>
            </Style>
            <Style x:Key="editableField"
                   TargetType="TextBox">
                <Style.Triggers>
                    <DataTrigger Binding="{Binding IsReadOnly, RelativeSource={RelativeSource Self}}"
                                 Value="True">
                        <Setter Property="BorderBrush"
                                Value="Transparent" />
                        <Setter Property="BorderThickness"
                                Value="0" />
                        <Setter Property="Background"
                                Value="Transparent" />
                    </DataTrigger>
                </Style.Triggers>
                <Style.Resources>
                    <Style TargetType="Border">
                        <Setter Property="CornerRadius"
                                Value="3" />
                    </Style>
                </Style.Resources>
            </Style>
            <Style x:Key="ExpanderHeaderFocusVisual">
                <Setter Property="Control.Template">
                    <Setter.Value>
                        <ControlTemplate>
                            <Border>
                                <Rectangle Margin="0"
                                           SnapsToDevicePixels="true"
                                           Stroke="Black"
                                           StrokeThickness="1"
                                           StrokeDashArray="1 2" />
                            </Border>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>
            <Style x:Key="ExpanderDownHeaderStyle"
                   TargetType="{x:Type ToggleButton}">
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="{x:Type ToggleButton}">
                            <Border Padding="{TemplateBinding Padding}">
                                <Grid Background="Transparent"
                                      SnapsToDevicePixels="False">
                                    <Grid.ColumnDefinitions>
                                        <ColumnDefinition Width="30" />
                                        <ColumnDefinition Width="*" />
                                    </Grid.ColumnDefinitions>
                                    <TextBlock x:Name="expenderToggleButtonText"
                                               Text="+"
                                               HorizontalAlignment="Center"
                                               VerticalAlignment="Center"
                                               FontSize="16"
                                               FontWeight="Bold"
                                               Margin="4"
                                               Foreground="Gray" />
                                    <ContentPresenter Grid.Column="1"
                                                      HorizontalAlignment="Left"
                                                      VerticalAlignment="Center"
                                                      Margin="0, 0, 0, 0"
                                                      RecognizesAccessKey="True"
                                                      SnapsToDevicePixels="True" />
                                </Grid>
                            </Border>
                            <ControlTemplate.Triggers>
                                <Trigger Property="IsChecked"
                                         Value="true">
                                    <Setter Property="Text"
                                            TargetName="expenderToggleButtonText"
                                            Value="-" />
                                </Trigger>
                            </ControlTemplate.Triggers>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>
            <Style x:Key="GroupExpander"
                   TargetType="{x:Type Expander}">
                <Setter Property="Foreground"
                        Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}" />
                <Setter Property="Background"
                        Value="Transparent" />
                <Setter Property="HorizontalContentAlignment"
                        Value="Stretch" />
                <Setter Property="VerticalContentAlignment"
                        Value="Stretch" />
                <Setter Property="BorderBrush"
                        Value="Transparent" />
                <Setter Property="BorderThickness"
                        Value="1" />
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="{x:Type Expander}">
                            <Border BorderBrush="{TemplateBinding BorderBrush}"
                                    BorderThickness="{TemplateBinding BorderThickness}"
                                    Background="{TemplateBinding Background}"
                                    CornerRadius="3"
                                    SnapsToDevicePixels="true">
                                <DockPanel>
                                    <ToggleButton x:Name="HeaderSite"
                                                  ContentTemplate="{TemplateBinding HeaderTemplate}"
                                                  ContentTemplateSelector="{TemplateBinding HeaderTemplateSelector}"
                                                  Content="{TemplateBinding Header}"
                                                  DockPanel.Dock="Top"
                                                  Foreground="{TemplateBinding Foreground}"
                                                  FontWeight="{TemplateBinding FontWeight}"
                                                  FocusVisualStyle="{StaticResource ExpanderHeaderFocusVisual}"
                                                  FontStyle="{TemplateBinding FontStyle}"
                                                  FontStretch="{TemplateBinding FontStretch}"
                                                  FontSize="{TemplateBinding FontSize}"
                                                  FontFamily="{TemplateBinding FontFamily}"
                                                  HorizontalContentAlignment="{TemplateBinding HorizontalContentAlignment}"
                                                  IsChecked="{Binding IsExpanded, Mode=TwoWay, RelativeSource={RelativeSource TemplatedParent}}"
                                                  Margin="1"
                                                  MinWidth="0"
                                                  Height="30"
                                                  Padding="{TemplateBinding Padding}"
                                                  Style="{StaticResource ExpanderDownHeaderStyle}"
                                                  VerticalContentAlignment="{TemplateBinding VerticalContentAlignment}" />
                                    <ContentPresenter x:Name="ExpandSite"
                                                      DockPanel.Dock="Bottom"
                                                      Focusable="false"
                                                      HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                                      Margin="{TemplateBinding Padding}"
                                                      Visibility="Collapsed"
                                                      VerticalAlignment="{TemplateBinding VerticalContentAlignment}" />
                                </DockPanel>
                            </Border>
                            <ControlTemplate.Triggers>
                                <Trigger Property="IsExpanded"
                                         Value="true">
                                    <Setter Property="Visibility"
                                            TargetName="ExpandSite"
                                            Value="Visible" />
                                </Trigger>
                                <Trigger Property="IsEnabled"
                                         Value="false">
                                    <Setter Property="Foreground"
                                            Value="{DynamicResource {x:Static SystemColors.GrayTextBrushKey}}" />
                                </Trigger>
                            </ControlTemplate.Triggers>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>
            <local:SortOrderToStringConverter x:Key="SortOrderToStringConverter" />
            <local:BoolToVisibilityConverter x:Key="BoolToVisibilityConverter"/>
            <Style x:Key="FocusVisual">
                <Setter Property="Control.Template">
                    <Setter.Value>
                        <ControlTemplate>
                            <Rectangle Margin="2"
                                       StrokeDashArray="1 2"
                                       Stroke="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}"
                                       SnapsToDevicePixels="true"
                                       StrokeThickness="1" />
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>
            <SolidColorBrush x:Key="TextBox.Static.Background"
                             Color="#FFFFFFFF" />
            <Style x:Key="ComboBoxEditableTextBox"
                   TargetType="{x:Type TextBox}">
                <Setter Property="OverridesDefaultStyle"
                        Value="true" />
                <Setter Property="AllowDrop"
                        Value="true" />
                <Setter Property="MinWidth"
                        Value="0" />
                <Setter Property="MinHeight"
                        Value="0" />
                <Setter Property="FocusVisualStyle"
                        Value="{x:Null}" />
                <Setter Property="ScrollViewer.PanningMode"
                        Value="VerticalFirst" />
                <Setter Property="Stylus.IsFlicksEnabled"
                        Value="False" />
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="{x:Type TextBox}">
                            <ScrollViewer x:Name="PART_ContentHost"
                                          Background="Transparent"
                                          Focusable="false"
                                          HorizontalScrollBarVisibility="Hidden"
                                          VerticalScrollBarVisibility="Hidden" />
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>
            <LinearGradientBrush x:Key="ComboBox.Static.Background"
                                 EndPoint="0,1"
                                 StartPoint="0,0">
                <GradientStop Color="#FFF0F0F0"
                              Offset="0.0" />
                <GradientStop Color="#FFE5E5E5"
                              Offset="1.0" />
            </LinearGradientBrush>
            <SolidColorBrush x:Key="ComboBox.Static.Border"
                             Color="#FFACACAC" />
            <SolidColorBrush x:Key="ComboBox.Static.Glyph"
                             Color="#FF606060" />
            <SolidColorBrush x:Key="ComboBox.Static.Editable.Background"
                             Color="#FFFFFFFF" />
            <SolidColorBrush x:Key="ComboBox.Static.Editable.Border"
                             Color="#FFABADB3" />
            <SolidColorBrush x:Key="ComboBox.Static.Editable.Button.Background"
                             Color="Transparent" />
            <SolidColorBrush x:Key="ComboBox.Static.Editable.Button.Border"
                             Color="Transparent" />
            <LinearGradientBrush x:Key="ComboBox.MouseOver.Background"
                                 EndPoint="0,1"
                                 StartPoint="0,0">
                <GradientStop Color="#FFECF4FC"
                              Offset="0.0" />
                <GradientStop Color="#FFDCECFC"
                              Offset="1.0" />
            </LinearGradientBrush>
            <SolidColorBrush x:Key="ComboBox.MouseOver.Border"
                             Color="#FF7EB4EA" />
            <SolidColorBrush x:Key="ComboBox.MouseOver.Glyph"
                             Color="#FF000000" />
            <SolidColorBrush x:Key="ComboBox.MouseOver.Editable.Background"
                             Color="#FFFFFFFF" />
            <SolidColorBrush x:Key="ComboBox.MouseOver.Editable.Border"
                             Color="#FF7EB4EA" />
            <LinearGradientBrush x:Key="ComboBox.MouseOver.Editable.Button.Background"
                                 EndPoint="0,1"
                                 StartPoint="0,0">
                <GradientStop Color="#FFEBF4FC"
                              Offset="0.0" />
                <GradientStop Color="#FFDCECFC"
                              Offset="1.0" />
            </LinearGradientBrush>
            <SolidColorBrush x:Key="ComboBox.MouseOver.Editable.Button.Border"
                             Color="#FF7EB4EA" />
            <LinearGradientBrush x:Key="ComboBox.Pressed.Background"
                                 EndPoint="0,1"
                                 StartPoint="0,0">
                <GradientStop Color="#FFDAECFC"
                              Offset="0.0" />
                <GradientStop Color="#FFC4E0FC"
                              Offset="1.0" />
            </LinearGradientBrush>
            <SolidColorBrush x:Key="ComboBox.Pressed.Border"
                             Color="#FF569DE5" />
            <SolidColorBrush x:Key="ComboBox.Pressed.Glyph"
                             Color="#FF000000" />
            <SolidColorBrush x:Key="ComboBox.Pressed.Editable.Background"
                             Color="#FFFFFFFF" />
            <SolidColorBrush x:Key="ComboBox.Pressed.Editable.Border"
                             Color="#FF569DE5" />
            <LinearGradientBrush x:Key="ComboBox.Pressed.Editable.Button.Background"
                                 EndPoint="0,1"
                                 StartPoint="0,0">
                <GradientStop Color="#FFDAEBFC"
                              Offset="0.0" />
                <GradientStop Color="#FFC4E0FC"
                              Offset="1.0" />
            </LinearGradientBrush>
            <SolidColorBrush x:Key="ComboBox.Pressed.Editable.Button.Border"
                             Color="#FF569DE5" />
            <SolidColorBrush x:Key="ComboBox.Disabled.Background"
                             Color="#FFF0F0F0" />
            <SolidColorBrush x:Key="ComboBox.Disabled.Border"
                             Color="#FFD9D9D9" />
            <SolidColorBrush x:Key="ComboBox.Disabled.Glyph"
                             Color="#FFBFBFBF" />
            <SolidColorBrush x:Key="ComboBox.Disabled.Editable.Background"
                             Color="#FFFFFFFF" />
            <SolidColorBrush x:Key="ComboBox.Disabled.Editable.Border"
                             Color="#FFBFBFBF" />
            <SolidColorBrush x:Key="ComboBox.Disabled.Editable.Button.Background"
                             Color="Transparent" />
            <SolidColorBrush x:Key="ComboBox.Disabled.Editable.Button.Border"
                             Color="Transparent" />
            <Style x:Key="ComboBoxToggleButton"
                   TargetType="{x:Type ToggleButton}">
                <Setter Property="OverridesDefaultStyle"
                        Value="true" />
                <Setter Property="IsTabStop"
                        Value="false" />
                <Setter Property="Focusable"
                        Value="false" />
                <Setter Property="ClickMode"
                        Value="Press" />
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="{x:Type ToggleButton}">
                            <Border x:Name="templateRoot"
                                    Background="{StaticResource ComboBox.Static.Background}"
                                    BorderBrush="{StaticResource ComboBox.Static.Border}"
                                    BorderThickness="{TemplateBinding BorderThickness}"
                                    SnapsToDevicePixels="true"
                                    CornerRadius="3">
                                <Border x:Name="splitBorder"
                                        BorderBrush="Transparent"
                                        BorderThickness="1"
                                        HorizontalAlignment="Right"
                                        Margin="0"
                                        SnapsToDevicePixels="true"
                                        Width="{DynamicResource {x:Static SystemParameters.VerticalScrollBarWidthKey}}"
                                        CornerRadius="3">
                                    <Path x:Name="arrow"
                                          Data="F1 M 0,0 L 2.667,2.66665 L 5.3334,0 L 5.3334,-1.78168 L 2.6667,0.88501 L0,-1.78168 L0,0 Z"
                                          Fill="{StaticResource ComboBox.Static.Glyph}"
                                          HorizontalAlignment="Center"
                                          Margin="0"
                                          VerticalAlignment="Center" />
                                </Border>
                            </Border>
                            <ControlTemplate.Triggers>
                                <MultiDataTrigger>
                                    <MultiDataTrigger.Conditions>
                                        <Condition Binding="{Binding IsEditable, RelativeSource={RelativeSource AncestorType={x:Type ComboBox}}}"
                                                   Value="true" />
                                        <Condition Binding="{Binding IsMouseOver, RelativeSource={RelativeSource Self}}"
                                                   Value="false" />
                                        <Condition Binding="{Binding IsPressed, RelativeSource={RelativeSource Self}}"
                                                   Value="false" />
                                        <Condition Binding="{Binding IsEnabled, RelativeSource={RelativeSource Self}}"
                                                   Value="true" />
                                    </MultiDataTrigger.Conditions>
                                    <Setter Property="Background"
                                            TargetName="templateRoot"
                                            Value="{StaticResource ComboBox.Static.Editable.Background}" />
                                    <Setter Property="BorderBrush"
                                            TargetName="templateRoot"
                                            Value="{StaticResource ComboBox.Static.Editable.Border}" />
                                    <Setter Property="Background"
                                            TargetName="splitBorder"
                                            Value="{StaticResource ComboBox.Static.Editable.Button.Background}" />
                                    <Setter Property="BorderBrush"
                                            TargetName="splitBorder"
                                            Value="{StaticResource ComboBox.Static.Editable.Button.Border}" />
                                </MultiDataTrigger>
                                <Trigger Property="IsMouseOver"
                                         Value="true">
                                    <Setter Property="Fill"
                                            TargetName="arrow"
                                            Value="{StaticResource ComboBox.MouseOver.Glyph}" />
                                </Trigger>
                                <MultiDataTrigger>
                                    <MultiDataTrigger.Conditions>
                                        <Condition Binding="{Binding IsMouseOver, RelativeSource={RelativeSource Self}}"
                                                   Value="true" />
                                        <Condition Binding="{Binding IsEditable, RelativeSource={RelativeSource AncestorType={x:Type ComboBox}}}"
                                                   Value="false" />
                                    </MultiDataTrigger.Conditions>
                                    <Setter Property="Background"
                                            TargetName="templateRoot"
                                            Value="{StaticResource ComboBox.MouseOver.Background}" />
                                    <Setter Property="BorderBrush"
                                            TargetName="templateRoot"
                                            Value="{StaticResource ComboBox.MouseOver.Border}" />
                                </MultiDataTrigger>
                                <MultiDataTrigger>
                                    <MultiDataTrigger.Conditions>
                                        <Condition Binding="{Binding IsMouseOver, RelativeSource={RelativeSource Self}}"
                                                   Value="true" />
                                        <Condition Binding="{Binding IsEditable, RelativeSource={RelativeSource AncestorType={x:Type ComboBox}}}"
                                                   Value="true" />
                                    </MultiDataTrigger.Conditions>
                                    <Setter Property="Background"
                                            TargetName="templateRoot"
                                            Value="{StaticResource ComboBox.MouseOver.Editable.Background}" />
                                    <Setter Property="BorderBrush"
                                            TargetName="templateRoot"
                                            Value="{StaticResource ComboBox.MouseOver.Editable.Border}" />
                                    <Setter Property="Background"
                                            TargetName="splitBorder"
                                            Value="{StaticResource ComboBox.MouseOver.Editable.Button.Background}" />
                                    <Setter Property="BorderBrush"
                                            TargetName="splitBorder"
                                            Value="{StaticResource ComboBox.MouseOver.Editable.Button.Border}" />
                                </MultiDataTrigger>
                                <Trigger Property="IsPressed"
                                         Value="true">
                                    <Setter Property="Fill"
                                            TargetName="arrow"
                                            Value="{StaticResource ComboBox.Pressed.Glyph}" />
                                </Trigger>
                                <MultiDataTrigger>
                                    <MultiDataTrigger.Conditions>
                                        <Condition Binding="{Binding IsPressed, RelativeSource={RelativeSource Self}}"
                                                   Value="true" />
                                        <Condition Binding="{Binding IsEditable, RelativeSource={RelativeSource AncestorType={x:Type ComboBox}}}"
                                                   Value="false" />
                                    </MultiDataTrigger.Conditions>
                                    <Setter Property="Background"
                                            TargetName="templateRoot"
                                            Value="{StaticResource ComboBox.Pressed.Background}" />
                                    <Setter Property="BorderBrush"
                                            TargetName="templateRoot"
                                            Value="{StaticResource ComboBox.Pressed.Border}" />
                                </MultiDataTrigger>
                                <MultiDataTrigger>
                                    <MultiDataTrigger.Conditions>
                                        <Condition Binding="{Binding IsPressed, RelativeSource={RelativeSource Self}}"
                                                   Value="true" />
                                        <Condition Binding="{Binding IsEditable, RelativeSource={RelativeSource AncestorType={x:Type ComboBox}}}"
                                                   Value="true" />
                                    </MultiDataTrigger.Conditions>
                                    <Setter Property="Background"
                                            TargetName="templateRoot"
                                            Value="{StaticResource ComboBox.Pressed.Editable.Background}" />
                                    <Setter Property="BorderBrush"
                                            TargetName="templateRoot"
                                            Value="{StaticResource ComboBox.Pressed.Editable.Border}" />
                                    <Setter Property="Background"
                                            TargetName="splitBorder"
                                            Value="{StaticResource ComboBox.Pressed.Editable.Button.Background}" />
                                    <Setter Property="BorderBrush"
                                            TargetName="splitBorder"
                                            Value="{StaticResource ComboBox.Pressed.Editable.Button.Border}" />
                                </MultiDataTrigger>
                                <Trigger Property="IsEnabled"
                                         Value="false">
                                    <Setter Property="Fill"
                                            TargetName="arrow"
                                            Value="{StaticResource ComboBox.Disabled.Glyph}" />
                                </Trigger>
                                <MultiDataTrigger>
                                    <MultiDataTrigger.Conditions>
                                        <Condition Binding="{Binding IsEnabled, RelativeSource={RelativeSource Self}}"
                                                   Value="false" />
                                        <Condition Binding="{Binding IsEditable, RelativeSource={RelativeSource AncestorType={x:Type ComboBox}}}"
                                                   Value="false" />
                                    </MultiDataTrigger.Conditions>
                                    <Setter Property="Background"
                                            TargetName="templateRoot"
                                            Value="{StaticResource ComboBox.Disabled.Background}" />
                                    <Setter Property="BorderBrush"
                                            TargetName="templateRoot"
                                            Value="{StaticResource ComboBox.Disabled.Border}" />
                                </MultiDataTrigger>
                                <MultiDataTrigger>
                                    <MultiDataTrigger.Conditions>
                                        <Condition Binding="{Binding IsEnabled, RelativeSource={RelativeSource Self}}"
                                                   Value="false" />
                                        <Condition Binding="{Binding IsEditable, RelativeSource={RelativeSource AncestorType={x:Type ComboBox}}}"
                                                   Value="true" />
                                    </MultiDataTrigger.Conditions>
                                    <Setter Property="Background"
                                            TargetName="templateRoot"
                                            Value="{StaticResource ComboBox.Disabled.Editable.Background}" />
                                    <Setter Property="BorderBrush"
                                            TargetName="templateRoot"
                                            Value="{StaticResource ComboBox.Disabled.Editable.Border}" />
                                    <Setter Property="Background"
                                            TargetName="splitBorder"
                                            Value="{StaticResource ComboBox.Disabled.Editable.Button.Background}" />
                                    <Setter Property="BorderBrush"
                                            TargetName="splitBorder"
                                            Value="{StaticResource ComboBox.Disabled.Editable.Button.Border}" />
                                </MultiDataTrigger>
                            </ControlTemplate.Triggers>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>
            <ControlTemplate x:Key="ComboBoxEditableTemplate"
                             TargetType="{x:Type ComboBox}">
                <Grid x:Name="templateRoot"
                      SnapsToDevicePixels="true">
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="*" />
                        <ColumnDefinition MinWidth="{DynamicResource {x:Static SystemParameters.VerticalScrollBarWidthKey}}"
                                          Width="0" />
                    </Grid.ColumnDefinitions>
                    <Popup x:Name="PART_Popup"
                           AllowsTransparency="true"
                           Grid.ColumnSpan="2"
                           IsOpen="{Binding IsDropDownOpen, RelativeSource={RelativeSource TemplatedParent}}"
                           Placement="Bottom"
                           PopupAnimation="{DynamicResource {x:Static SystemParameters.ComboBoxPopupAnimationKey}}">
                        <theme:SystemDropShadowChrome x:Name="shadow"
                                                      Color="Transparent"
                                                      MinWidth="{Binding ActualWidth, ElementName=templateRoot}"
                                                      MaxHeight="{TemplateBinding MaxDropDownHeight}">
                            <Border x:Name="dropDownBorder"
                                    Background="{DynamicResource {x:Static SystemColors.WindowBrushKey}}"
                                    BorderBrush="{DynamicResource {x:Static SystemColors.WindowFrameBrushKey}}"
                                    BorderThickness="1">
                                <ScrollViewer x:Name="DropDownScrollViewer">
                                    <Grid x:Name="grid"
                                          RenderOptions.ClearTypeHint="Enabled">
                                        <Canvas x:Name="canvas"
                                                HorizontalAlignment="Left"
                                                Height="0"
                                                VerticalAlignment="Top"
                                                Width="0">
                                            <Rectangle x:Name="opaqueRect"
                                                       Fill="{Binding Background, ElementName=dropDownBorder}"
                                                       Height="{Binding ActualHeight, ElementName=dropDownBorder}"
                                                       Width="{Binding ActualWidth, ElementName=dropDownBorder}" />
                                        </Canvas>
                                        <ItemsPresenter x:Name="ItemsPresenter"
                                                        KeyboardNavigation.DirectionalNavigation="Contained"
                                                        SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
                                    </Grid>
                                </ScrollViewer>
                            </Border>
                        </theme:SystemDropShadowChrome>
                    </Popup>
                    <ToggleButton x:Name="toggleButton"
                                  Background="{TemplateBinding Background}"
                                  BorderBrush="{TemplateBinding BorderBrush}"
                                  BorderThickness="{TemplateBinding BorderThickness}"
                                  Grid.ColumnSpan="2"
                                  IsChecked="{Binding IsDropDownOpen, Mode=TwoWay, RelativeSource={RelativeSource TemplatedParent}}"
                                  Style="{StaticResource ComboBoxToggleButton}" />
                    <Border x:Name="border"
                            Background="{StaticResource TextBox.Static.Background}"
                            Margin="{TemplateBinding BorderThickness}">
                        <TextBox x:Name="PART_EditableTextBox"
                                 HorizontalContentAlignment="{TemplateBinding HorizontalContentAlignment}"
                                 IsReadOnly="{Binding IsReadOnly, RelativeSource={RelativeSource TemplatedParent}}"
                                 Margin="{TemplateBinding Padding}"
                                 Style="{StaticResource ComboBoxEditableTextBox}"
                                 VerticalContentAlignment="{TemplateBinding VerticalContentAlignment}" />
                    </Border>
                </Grid>
                <ControlTemplate.Triggers>
                    <Trigger Property="IsEnabled"
                             Value="false">
                        <Setter Property="Opacity"
                                TargetName="border"
                                Value="0.56" />
                    </Trigger>
                    <Trigger Property="IsKeyboardFocusWithin"
                             Value="true">
                        <Setter Property="Foreground"
                                Value="Black" />
                    </Trigger>
                    <Trigger Property="HasDropShadow"
                             SourceName="PART_Popup"
                             Value="true">
                        <Setter Property="Margin"
                                TargetName="shadow"
                                Value="0,0,5,5" />
                        <Setter Property="Color"
                                TargetName="shadow"
                                Value="#71000000" />
                    </Trigger>
                    <Trigger Property="HasItems"
                             Value="false">
                        <Setter Property="Height"
                                TargetName="dropDownBorder"
                                Value="95" />
                    </Trigger>
                    <MultiTrigger>
                        <MultiTrigger.Conditions>
                            <Condition Property="IsGrouping"
                                       Value="true" />
                            <Condition Property="VirtualizingPanel.IsVirtualizingWhenGrouping"
                                       Value="false" />
                        </MultiTrigger.Conditions>
                        <Setter Property="ScrollViewer.CanContentScroll"
                                Value="false" />
                    </MultiTrigger>
                    <Trigger Property="ScrollViewer.CanContentScroll"
                             SourceName="DropDownScrollViewer"
                             Value="false">
                        <Setter Property="Canvas.Top"
                                TargetName="opaqueRect"
                                Value="{Binding VerticalOffset, ElementName=DropDownScrollViewer}" />
                        <Setter Property="Canvas.Left"
                                TargetName="opaqueRect"
                                Value="{Binding HorizontalOffset, ElementName=DropDownScrollViewer}" />
                    </Trigger>
                </ControlTemplate.Triggers>
            </ControlTemplate>
            <ControlTemplate x:Key="ComboBoxTemplate"
                             TargetType="{x:Type ComboBox}">
                <Grid x:Name="templateRoot"
                      SnapsToDevicePixels="true">
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="*" />
                        <ColumnDefinition MinWidth="{DynamicResource {x:Static SystemParameters.VerticalScrollBarWidthKey}}"
                                          Width="0" />
                    </Grid.ColumnDefinitions>
                    <Popup x:Name="PART_Popup"
                           AllowsTransparency="true"
                           Grid.ColumnSpan="2"
                           IsOpen="{Binding IsDropDownOpen, Mode=TwoWay, RelativeSource={RelativeSource TemplatedParent}}"
                           Margin="1"
                           Placement="Bottom"
                           PopupAnimation="{DynamicResource {x:Static SystemParameters.ComboBoxPopupAnimationKey}}">
                        <theme:SystemDropShadowChrome x:Name="shadow"
                                                      Color="Transparent"
                                                      MinWidth="{Binding ActualWidth, ElementName=templateRoot}"
                                                      MaxHeight="{TemplateBinding MaxDropDownHeight}">
                            <Border x:Name="dropDownBorder"
                                    Background="{DynamicResource {x:Static SystemColors.WindowBrushKey}}"
                                    BorderBrush="{DynamicResource {x:Static SystemColors.WindowFrameBrushKey}}"
                                    BorderThickness="1"
                                    CornerRadius="3">
                                <ScrollViewer x:Name="DropDownScrollViewer">
                                    <Grid x:Name="grid"
                                          RenderOptions.ClearTypeHint="Enabled">
                                        <Canvas x:Name="canvas"
                                                HorizontalAlignment="Left"
                                                Height="0"
                                                VerticalAlignment="Top"
                                                Width="0">
                                            <Rectangle x:Name="opaqueRect"
                                                       Fill="{Binding Background, ElementName=dropDownBorder}"
                                                       Height="{Binding ActualHeight, ElementName=dropDownBorder}"
                                                       Width="{Binding ActualWidth, ElementName=dropDownBorder}" />
                                        </Canvas>
                                        <ItemsPresenter x:Name="ItemsPresenter"
                                                        KeyboardNavigation.DirectionalNavigation="Contained"
                                                        SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
                                    </Grid>
                                </ScrollViewer>
                            </Border>
                        </theme:SystemDropShadowChrome>
                    </Popup>
                    <ToggleButton x:Name="toggleButton"
                                  Background="{TemplateBinding Background}"
                                  BorderBrush="{TemplateBinding BorderBrush}"
                                  BorderThickness="{TemplateBinding BorderThickness}"
                                  Grid.ColumnSpan="2"
                                  IsChecked="{Binding IsDropDownOpen, Mode=TwoWay, RelativeSource={RelativeSource TemplatedParent}}"
                                  Style="{StaticResource ComboBoxToggleButton}" />
                    <ContentPresenter x:Name="contentPresenter"
                                      ContentStringFormat="{TemplateBinding SelectionBoxItemStringFormat}"
                                      ContentTemplate="{TemplateBinding SelectionBoxItemTemplate}"
                                      Content="{TemplateBinding SelectionBoxItem}"
                                      ContentTemplateSelector="{TemplateBinding ItemTemplateSelector}"
                                      HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                      IsHitTestVisible="false"
                                      Margin="{TemplateBinding Padding}"
                                      SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"
                                      VerticalAlignment="{TemplateBinding VerticalContentAlignment}" />
                </Grid>
                <ControlTemplate.Triggers>
                    <Trigger Property="HasDropShadow"
                             SourceName="PART_Popup"
                             Value="true">
                        <Setter Property="Margin"
                                TargetName="shadow"
                                Value="0,0,5,5" />
                        <Setter Property="Color"
                                TargetName="shadow"
                                Value="#71000000" />
                    </Trigger>
                    <Trigger Property="HasItems"
                             Value="false">
                        <Setter Property="Height"
                                TargetName="dropDownBorder"
                                Value="95" />
                    </Trigger>
                    <MultiTrigger>
                        <MultiTrigger.Conditions>
                            <Condition Property="IsGrouping"
                                       Value="true" />
                            <Condition Property="VirtualizingPanel.IsVirtualizingWhenGrouping"
                                       Value="false" />
                        </MultiTrigger.Conditions>
                        <Setter Property="ScrollViewer.CanContentScroll"
                                Value="false" />
                    </MultiTrigger>
                    <Trigger Property="ScrollViewer.CanContentScroll"
                             SourceName="DropDownScrollViewer"
                             Value="false">
                        <Setter Property="Canvas.Top"
                                TargetName="opaqueRect"
                                Value="{Binding VerticalOffset, ElementName=DropDownScrollViewer}" />
                        <Setter Property="Canvas.Left"
                                TargetName="opaqueRect"
                                Value="{Binding HorizontalOffset, ElementName=DropDownScrollViewer}" />
                    </Trigger>
                </ControlTemplate.Triggers>
            </ControlTemplate>
            <Style x:Key="RoundedComboBoxStyle"
                   TargetType="{x:Type ComboBox}">
                <Setter Property="FocusVisualStyle"
                        Value="{StaticResource FocusVisual}" />
                <Setter Property="Background"
                        Value="{StaticResource ComboBox.Static.Background}" />
                <Setter Property="BorderBrush"
                        Value="{StaticResource ComboBox.Static.Border}" />
                <Setter Property="Foreground"
                        Value="{DynamicResource {x:Static SystemColors.WindowTextBrushKey}}" />
                <Setter Property="BorderThickness"
                        Value="1" />
                <Setter Property="ScrollViewer.HorizontalScrollBarVisibility"
                        Value="Auto" />
                <Setter Property="ScrollViewer.VerticalScrollBarVisibility"
                        Value="Auto" />
                <Setter Property="Padding"
                        Value="6,3,5,3" />
                <Setter Property="ScrollViewer.CanContentScroll"
                        Value="true" />
                <Setter Property="ScrollViewer.PanningMode"
                        Value="Both" />
                <Setter Property="Stylus.IsFlicksEnabled"
                        Value="False" />
                <Setter Property="Template"
                        Value="{StaticResource ComboBoxTemplate}" />
                <Style.Triggers>
                    <Trigger Property="IsEditable"
                             Value="true">
                        <Setter Property="IsTabStop"
                                Value="false" />
                        <Setter Property="Padding"
                                Value="2" />
                        <Setter Property="Template"
                                Value="{StaticResource ComboBoxEditableTemplate}" />
                    </Trigger>
                </Style.Triggers>
            </Style>
            <Style x:Key="FocusVisual1">
                <Setter Property="Control.Template">
                    <Setter.Value>
                        <ControlTemplate>
                            <Rectangle Margin="2"
                                       StrokeDashArray="1 2"
                                       Stroke="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}"
                                       SnapsToDevicePixels="true"
                                       StrokeThickness="1" />
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>
            <Style x:Key="OptionMarkFocusVisual">
                <Setter Property="Control.Template">
                    <Setter.Value>
                        <ControlTemplate>
                            <Rectangle Margin="14,0,0,0"
                                       StrokeDashArray="1 2"
                                       Stroke="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}"
                                       SnapsToDevicePixels="true"
                                       StrokeThickness="1" />
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>
            <SolidColorBrush x:Key="OptionMark.Static.Background"
                             Color="#FFFFFFFF" />
            <SolidColorBrush x:Key="OptionMark.Static.Border"
                             Color="#FF707070" />
            <SolidColorBrush x:Key="OptionMark.Static.Glyph"
                             Color="#FF212121" />
            <SolidColorBrush x:Key="OptionMark.MouseOver.Background"
                             Color="#FFF3F9FF" />
            <SolidColorBrush x:Key="OptionMark.MouseOver.Border"
                             Color="#FF5593FF" />
            <SolidColorBrush x:Key="OptionMark.MouseOver.Glyph"
                             Color="#FF212121" />
            <SolidColorBrush x:Key="OptionMark.Pressed.Background"
                             Color="#FFD9ECFF" />
            <SolidColorBrush x:Key="OptionMark.Pressed.Border"
                             Color="#FF3C77DD" />
            <SolidColorBrush x:Key="OptionMark.Pressed.Glyph"
                             Color="#FF212121" />
            <SolidColorBrush x:Key="OptionMark.Disabled.Background"
                             Color="#FFE6E6E6" />
            <SolidColorBrush x:Key="OptionMark.Disabled.Border"
                             Color="#FFBCBCBC" />
            <SolidColorBrush x:Key="OptionMark.Disabled.Glyph"
                             Color="#FF707070" />
            <Style x:Key="RoundedCheckBoxStyle"
                   TargetType="{x:Type CheckBox}"
                   BasedOn="{StaticResource {x:Type CheckBox}}">
                <Setter Property="FocusVisualStyle"
                        Value="{StaticResource FocusVisual1}" />
                <Setter Property="Background"
                        Value="{StaticResource OptionMark.Static.Background}" />
                <Setter Property="BorderBrush"
                        Value="{StaticResource OptionMark.Static.Border}" />
                <Setter Property="Foreground"
                        Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}" />
                <Setter Property="BorderThickness"
                        Value="1" />
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="{x:Type CheckBox}">
                            <Grid x:Name="templateRoot"
                                  Background="Transparent"
                                  SnapsToDevicePixels="True">
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="Auto" />
                                    <ColumnDefinition Width="*" />
                                </Grid.ColumnDefinitions>
                                <Border x:Name="checkBoxBorder"
                                        Background="{TemplateBinding Background}"
                                        BorderBrush="{TemplateBinding BorderBrush}"
                                        BorderThickness="{TemplateBinding BorderThickness}"
                                        HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                        Margin="1"
                                        VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                        CornerRadius="3">
                                    <Grid x:Name="markGrid">
                                        <Path x:Name="optionMark"
                                              Data="F1 M 9.97498,1.22334L 4.6983,9.09834L 4.52164,9.09834L 0,5.19331L 1.27664,3.52165L 4.255,6.08833L 8.33331,1.52588e-005L 9.97498,1.22334 Z "
                                              Fill="{StaticResource OptionMark.Static.Glyph}"
                                              Margin="1"
                                              Opacity="0"
                                              Stretch="None" />
                                        <Rectangle x:Name="indeterminateMark"
                                                   Fill="{StaticResource OptionMark.Static.Glyph}"
                                                   Margin="2"
                                                   Opacity="0" />
                                    </Grid>
                                </Border>
                                <ContentPresenter x:Name="contentPresenter"
                                                  Grid.Column="1"
                                                  Focusable="False"
                                                  HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                                  Margin="{TemplateBinding Padding}"
                                                  RecognizesAccessKey="True"
                                                  SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"
                                                  VerticalAlignment="{TemplateBinding VerticalContentAlignment}" />
                            </Grid>
                            <ControlTemplate.Triggers>
                                <Trigger Property="HasContent"
                                         Value="true">
                                    <Setter Property="FocusVisualStyle"
                                            Value="{StaticResource OptionMarkFocusVisual}" />
                                    <Setter Property="Padding"
                                            Value="4,-1,0,0" />
                                </Trigger>
                                <Trigger Property="IsMouseOver"
                                         Value="true">
                                    <Setter Property="Background"
                                            TargetName="checkBoxBorder"
                                            Value="{StaticResource OptionMark.MouseOver.Background}" />
                                    <Setter Property="BorderBrush"
                                            TargetName="checkBoxBorder"
                                            Value="{StaticResource OptionMark.MouseOver.Border}" />
                                    <Setter Property="Fill"
                                            TargetName="optionMark"
                                            Value="{StaticResource OptionMark.MouseOver.Glyph}" />
                                    <Setter Property="Fill"
                                            TargetName="indeterminateMark"
                                            Value="{StaticResource OptionMark.MouseOver.Glyph}" />
                                </Trigger>
                                <Trigger Property="IsEnabled"
                                         Value="false">
                                    <Setter Property="Background"
                                            TargetName="checkBoxBorder"
                                            Value="{StaticResource OptionMark.Disabled.Background}" />
                                    <Setter Property="BorderBrush"
                                            TargetName="checkBoxBorder"
                                            Value="{StaticResource OptionMark.Disabled.Border}" />
                                    <Setter Property="Fill"
                                            TargetName="optionMark"
                                            Value="{StaticResource OptionMark.Disabled.Glyph}" />
                                    <Setter Property="Fill"
                                            TargetName="indeterminateMark"
                                            Value="{StaticResource OptionMark.Disabled.Glyph}" />
                                </Trigger>
                                <Trigger Property="IsPressed"
                                         Value="true">
                                    <Setter Property="Background"
                                            TargetName="checkBoxBorder"
                                            Value="{StaticResource OptionMark.Pressed.Background}" />
                                    <Setter Property="BorderBrush"
                                            TargetName="checkBoxBorder"
                                            Value="{StaticResource OptionMark.Pressed.Border}" />
                                    <Setter Property="Fill"
                                            TargetName="optionMark"
                                            Value="{StaticResource OptionMark.Pressed.Glyph}" />
                                    <Setter Property="Fill"
                                            TargetName="indeterminateMark"
                                            Value="{StaticResource OptionMark.Pressed.Glyph}" />
                                </Trigger>
                                <Trigger Property="IsChecked"
                                         Value="true">
                                    <Setter Property="Opacity"
                                            TargetName="optionMark"
                                            Value="1" />
                                    <Setter Property="Opacity"
                                            TargetName="indeterminateMark"
                                            Value="0" />
                                </Trigger>
                                <Trigger Property="IsChecked"
                                         Value="{x:Null}">
                                    <Setter Property="Opacity"
                                            TargetName="optionMark"
                                            Value="0" />
                                    <Setter Property="Opacity"
                                            TargetName="indeterminateMark"
                                            Value="1" />
                                </Trigger>
                            </ControlTemplate.Triggers>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>
            <!--Scrollbar Thumbs-->
            <Style x:Key="ScrollThumbs"
                   TargetType="{x:Type Thumb}">
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="{x:Type Thumb}">
                            <Grid x:Name="Grid">
                                <Rectangle HorizontalAlignment="Stretch"
                                           VerticalAlignment="Stretch"
                                           Width="Auto"
                                           Height="Auto"
                                           Fill="Transparent" />
                                <Border x:Name="Rectangle1"
                                        CornerRadius="3"
                                        HorizontalAlignment="Stretch"
                                        VerticalAlignment="Stretch"
                                        Width="Auto"
                                        Height="Auto"
                                        Background="{TemplateBinding Background}" />
                            </Grid>
                            <ControlTemplate.Triggers>
                                <Trigger Property="Tag"
                                         Value="Horizontal">
                                    <Setter TargetName="Rectangle1"
                                            Property="Width"
                                            Value="Auto" />
                                    <Setter TargetName="Rectangle1"
                                            Property="Height"
                                            Value="7" />
                                </Trigger>
                            </ControlTemplate.Triggers>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>
            <!--ScrollBars-->
            <Style x:Key="{x:Type ScrollBar}"
                   TargetType="{x:Type ScrollBar}">
                <Setter Property="Stylus.IsFlicksEnabled"
                        Value="false" />
                <Setter Property="Foreground"
                        Value="#e6e6e6" />
                <Setter Property="Background"
                        Value="Transparent" />
                <Setter Property="Width"
                        Value="8" />
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="{x:Type ScrollBar}">
                            <Grid x:Name="GridRoot"
                                  Width="Auto"
                                  Background="{TemplateBinding Background}">
                                <Grid.RowDefinitions>
                                    <RowDefinition Height="0.00001*" />
                                </Grid.RowDefinitions>

                                <Track x:Name="PART_Track"
                                       Grid.Row="0"
                                       IsDirectionReversed="true"
                                       Focusable="false">
                                    <Track.Thumb>
                                        <Thumb x:Name="Thumb"
                                               Background="{TemplateBinding Foreground}"
                                               Style="{StaticResource ScrollThumbs}" />
                                    </Track.Thumb>
                                    <Track.IncreaseRepeatButton>
                                        <RepeatButton x:Name="PageUp"
                                                      Command="ScrollBar.PageDownCommand"
                                                      Opacity="0"
                                                      Focusable="false" />
                                    </Track.IncreaseRepeatButton>
                                    <Track.DecreaseRepeatButton>
                                        <RepeatButton x:Name="PageDown"
                                                      Command="ScrollBar.PageUpCommand"
                                                      Opacity="0"
                                                      Focusable="false" />
                                    </Track.DecreaseRepeatButton>
                                </Track>
                            </Grid>

                            <ControlTemplate.Triggers>
                                <Trigger SourceName="Thumb"
                                         Property="IsMouseOver"
                                         Value="true">
                                    <Setter Value="#8c8c8c"
                                            TargetName="Thumb"
                                            Property="Background" />
                                </Trigger>
                                <Trigger SourceName="Thumb"
                                         Property="IsDragging"
                                         Value="true">
                                    <Setter Value="#8c8c8c"
                                            TargetName="Thumb"
                                            Property="Background" />
                                </Trigger>

                                <Trigger Property="IsEnabled"
                                         Value="false">
                                    <Setter TargetName="Thumb"
                                            Property="Visibility"
                                            Value="Collapsed" />
                                </Trigger>
                                <Trigger Property="Orientation"
                                         Value="Horizontal">
                                    <Setter TargetName="GridRoot"
                                            Property="LayoutTransform">
                                        <Setter.Value>
                                            <RotateTransform Angle="-90" />
                                        </Setter.Value>
                                    </Setter>
                                    <Setter TargetName="PART_Track"
                                            Property="LayoutTransform">
                                        <Setter.Value>
                                            <RotateTransform Angle="-90" />
                                        </Setter.Value>
                                    </Setter>
                                    <Setter Property="Width"
                                            Value="Auto" />
                                    <Setter Property="Height"
                                            Value="8" />
                                    <Setter TargetName="Thumb"
                                            Property="Tag"
                                            Value="Horizontal" />
                                    <Setter TargetName="PageDown"
                                            Property="Command"
                                            Value="ScrollBar.PageLeftCommand" />
                                    <Setter TargetName="PageUp"
                                            Property="Command"
                                            Value="ScrollBar.PageRightCommand" />
                                </Trigger>
                            </ControlTemplate.Triggers>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>

            <Style x:Key="GridViewColumnHeaderStyle"
                   TargetType="{x:Type GridViewColumnHeader}">
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="{x:Type GridViewColumnHeader}">
                            <Border BorderThickness="1,1,1,1"
                                    BorderBrush="LightGray"
                                    Background="Transparent">
                                <TextBlock x:Name="ContentHeader"
                                           Text="{TemplateBinding Content}"
                                           Padding="0,0,0,0"
                                           Width="{TemplateBinding Width}"
                                           TextAlignment="Center" />
                            </Border>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
                <Setter Property="OverridesDefaultStyle"
                        Value="True" />
                <Setter Property="Foreground"
                        Value="Black" />
                <Setter Property="FontFamily"
                        Value="Segoe UI" />
                <Setter Property="FontSize"
                        Value="12" />
            </Style>

            <!--Control colors.-->
            <Color x:Key="WindowColor">#FFE8EDF9</Color>
            <Color x:Key="ContentAreaColorLight">#FFC5CBF9</Color>
            <Color x:Key="ContentAreaColorDark">#FF7381F9</Color>

            <Color x:Key="DisabledControlLightColor">#FFE8EDF9</Color>
            <Color x:Key="DisabledControlDarkColor">#FFC5CBF9</Color>
            <Color x:Key="DisabledForegroundColor">#FF888888</Color>

            <Color x:Key="SelectedBackgroundColor">#FFC5CBF9</Color>
            <Color x:Key="SelectedUnfocusedColor">#FFDDDDDD</Color>

            <Color x:Key="ControlLightColor">White</Color>
            <Color x:Key="ControlMediumColor">#FF7381F9</Color>
            <Color x:Key="ControlDarkColor">#FF211AA9</Color>

            <Color x:Key="ControlMouseOverColor">#FF3843C4</Color>
            <Color x:Key="ControlPressedColor">#FF211AA9</Color>


            <Color x:Key="GlyphColor">#FF444444</Color>
            <Color x:Key="GlyphMouseOver">sc#1, 0.004391443, 0.002428215, 0.242281124</Color>

            <!--Border colors-->
            <Color x:Key="BorderLightColor">#FFCCCCCC</Color>
            <Color x:Key="BorderMediumColor">#FF888888</Color>
            <Color x:Key="BorderDarkColor">#FF444444</Color>

            <Color x:Key="PressedBorderLightColor">#FF888888</Color>
            <Color x:Key="PressedBorderDarkColor">#FF444444</Color>

            <Color x:Key="DisabledBorderLightColor">#FFAAAAAA</Color>
            <Color x:Key="DisabledBorderDarkColor">#FF888888</Color>

            <Color x:Key="DefaultBorderBrushDarkColor">Black</Color>

            <!--Control-specific resources.-->
            <Color x:Key="HeaderTopColor">#FFC5CBF9</Color>
            <Color x:Key="DatagridCurrentCellBorderColor">Black</Color>
            <Color x:Key="SliderTrackDarkColor">#FFC5CBF9</Color>

            <Color x:Key="NavButtonFrameColor">#FF3843C4</Color>

            <LinearGradientBrush x:Key="MenuPopupBrush"
                                 EndPoint="0.5,1"
                                 StartPoint="0.5,0">
                <GradientStop Color="{DynamicResource ControlLightColor}"
                              Offset="0" />
                <GradientStop Color="{DynamicResource ControlMediumColor}"
                              Offset="0.5" />
                <GradientStop Color="{DynamicResource ControlLightColor}"
                              Offset="1" />
            </LinearGradientBrush>

            <LinearGradientBrush x:Key="ProgressBarIndicatorAnimatedFill"
                                 StartPoint="0,0"
                                 EndPoint="1,0">
                <LinearGradientBrush.GradientStops>
                    <GradientStopCollection>
                        <GradientStop Color="#000000FF"
                                      Offset="0" />
                        <GradientStop Color="#600000FF"
                                      Offset="0.4" />
                        <GradientStop Color="#600000FF"
                                      Offset="0.6" />
                        <GradientStop Color="#000000FF"
                                      Offset="1" />
                    </GradientStopCollection>
                </LinearGradientBrush.GradientStops>
            </LinearGradientBrush>
            <Style x:Key="{x:Static GridView.GridViewScrollViewerStyleKey}"
                   TargetType="ScrollViewer">
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="ScrollViewer">
                            <Grid Background="{TemplateBinding Background}">
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="*" />
                                    <ColumnDefinition Width="Auto" />
                                </Grid.ColumnDefinitions>
                                <Grid.RowDefinitions>
                                    <RowDefinition Height="*" />
                                    <RowDefinition Height="Auto" />
                                </Grid.RowDefinitions>

                                <DockPanel Margin="{TemplateBinding Padding}">
                                    <ScrollViewer DockPanel.Dock="Top"
                                                  HorizontalScrollBarVisibility="Hidden"
                                                  VerticalScrollBarVisibility="Hidden"
                                                  Focusable="false">
                                        <GridViewHeaderRowPresenter Margin="0,0,5,0"
                                                                    Columns="{Binding Path=TemplatedParent.View.Columns, RelativeSource={RelativeSource TemplatedParent}}"
                                                                    ColumnHeaderContainerStyle="{Binding Path=TemplatedParent.View.ColumnHeaderContainerStyle, RelativeSource={RelativeSource TemplatedParent}}"
                                                                    ColumnHeaderTemplate="{Binding Path=TemplatedParent.View.ColumnHeaderTemplate, RelativeSource={RelativeSource TemplatedParent}}"
                                                                    ColumnHeaderTemplateSelector="{Binding Path=TemplatedParent.View.ColumnHeaderTemplateSelector, RelativeSource={RelativeSource TemplatedParent}}"
                                                                    AllowsColumnReorder="{Binding Path=TemplatedParent.View.AllowsColumnReorder,RelativeSource={RelativeSource TemplatedParent}}"
                                                                    ColumnHeaderContextMenu="{Binding Path=TemplatedParent.View.ColumnHeaderContextMenu, RelativeSource={RelativeSource TemplatedParent}}"
                                                                    ColumnHeaderToolTip="{Binding Path=TemplatedParent.View.ColumnHeaderToolTip, RelativeSource={RelativeSource TemplatedParent}}"
                                                                    SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
                                    </ScrollViewer>

                                    <ScrollContentPresenter Name="PART_ScrollContentPresenter"
                                                            KeyboardNavigation.DirectionalNavigation="Local"
                                                            CanContentScroll="False"
                                                            CanHorizontallyScroll="False"
                                                            CanVerticallyScroll="False" />
                                </DockPanel>

                                <ScrollBar Name="PART_HorizontalScrollBar"
                                           Orientation="Horizontal"
                                           Grid.Row="1"
                                           Maximum="{TemplateBinding ScrollableWidth}"
                                           ViewportSize="{TemplateBinding ViewportWidth}"
                                           Value="{TemplateBinding HorizontalOffset}"
                                           Visibility="{TemplateBinding ComputedHorizontalScrollBarVisibility}" />

                                <ScrollBar Name="PART_VerticalScrollBar"
                                           Grid.Column="1"
                                           Maximum="{TemplateBinding ScrollableHeight}"
                                           ViewportSize="{TemplateBinding ViewportHeight}"
                                           Value="{TemplateBinding VerticalOffset}"
                                           Visibility="{TemplateBinding ComputedVerticalScrollBarVisibility}" />

                            </Grid>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>

            <Style x:Key="{x:Type GridViewColumnHeader}"
                   TargetType="GridViewColumnHeader">
                <Setter Property="HorizontalContentAlignment"
                        Value="Center" />
                <Setter Property="VerticalContentAlignment"
                        Value="Center" />
                <Setter Property="Foreground"
                        Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}" />
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="GridViewColumnHeader">
                            <Grid>
                                <Border x:Name="HeaderBorder"
                                        BorderThickness="0,1,0,1"
                                        Padding="0,0,0,0"
                                        Background="#FDFDFA"
                                        BorderBrush="LightGray">
                                    <ContentPresenter x:Name="HeaderContent"
                                                      Margin="0,0,0,0"
                                                      RecognizesAccessKey="True"
                                                      VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                                      HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                                      SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
                                </Border>
                            </Grid>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>

            <Style x:Key="{x:Type ListView}"
                   TargetType="ListView">
                <Setter Property="SnapsToDevicePixels"
                        Value="true" />
                <Setter Property="OverridesDefaultStyle"
                        Value="true" />
                <Setter Property="ScrollViewer.HorizontalScrollBarVisibility"
                        Value="Auto" />
                <Setter Property="ScrollViewer.VerticalScrollBarVisibility"
                        Value="Auto" />
                <Setter Property="ScrollViewer.CanContentScroll"
                        Value="true" />
                <Setter Property="VerticalContentAlignment"
                        Value="Center" />
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="ListView">
                            <Border Name="Border"
                                    BorderThickness="1"
                                    CornerRadius="3">
                                <Border.Background>
                                    <SolidColorBrush Color="{StaticResource ControlLightColor}" />
                                </Border.Background>
                                <Border.BorderBrush>
                                    <SolidColorBrush Color="LightGray" />
                                </Border.BorderBrush>
                                <ScrollViewer Style="{DynamicResource {x:Static GridView.GridViewScrollViewerStyleKey}}"
                                              CanContentScroll="False">
                                    <ItemsPresenter />
                                </ScrollViewer>
                            </Border>
                            <ControlTemplate.Triggers>
                                <Trigger Property="IsGrouping"
                                         Value="true">
                                    <Setter Property="ScrollViewer.CanContentScroll"
                                            Value="false" />
                                </Trigger>
                                <Trigger Property="IsEnabled"
                                         Value="false">
                                    <Setter TargetName="Border"
                                            Property="Background">
                                        <Setter.Value>
                                            <SolidColorBrush Color="{DynamicResource DisabledBorderLightColor}" />
                                        </Setter.Value>
                                    </Setter>
                                </Trigger>
                            </ControlTemplate.Triggers>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>

            <Style x:Key="{x:Type ListViewItem}"
                   TargetType="ListViewItem">
                <Setter Property="SnapsToDevicePixels"
                        Value="true" />
                <Setter Property="OverridesDefaultStyle"
                        Value="true" />
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="ListBoxItem">
                            <Border x:Name="Border"
                                    Padding="2"
                                    SnapsToDevicePixels="true"
                                    Background="Transparent">
                                <VisualStateManager.VisualStateGroups>
                                    <VisualStateGroup x:Name="CommonStates">
                                        <VisualState x:Name="Normal" />
                                        <VisualState x:Name="MouseOver" />
                                        <VisualState x:Name="Disabled" />
                                    </VisualStateGroup>
                                    <VisualStateGroup x:Name="SelectionStates">
                                        <VisualState x:Name="Unselected" />
                                        <VisualState x:Name="Selected">
                                            <Storyboard>
                                                <ColorAnimationUsingKeyFrames Storyboard.TargetName="Border"
                                                                              Storyboard.TargetProperty="(Panel.Background).(SolidColorBrush.Color)">
                                                    <EasingColorKeyFrame KeyTime="0"
                                                                         Value="{StaticResource SelectedBackgroundColor}" />
                                                </ColorAnimationUsingKeyFrames>
                                            </Storyboard>
                                        </VisualState>
                                        <VisualState x:Name="SelectedUnfocused">
                                            <Storyboard>
                                                <ColorAnimationUsingKeyFrames Storyboard.TargetName="Border"
                                                                              Storyboard.TargetProperty="(Panel.Background).(SolidColorBrush.Color)">
                                                    <EasingColorKeyFrame KeyTime="0"
                                                                         Value="{StaticResource SelectedUnfocusedColor}" />
                                                </ColorAnimationUsingKeyFrames>
                                            </Storyboard>
                                        </VisualState>
                                    </VisualStateGroup>
                                </VisualStateManager.VisualStateGroups>
                                <GridViewRowPresenter VerticalAlignment="{TemplateBinding VerticalContentAlignment}" />
                            </Border>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>
        </ResourceDictionary>
    </Window.Resources>
    <Grid>
        <Grid.RowDefinitions>
            <RowDefinition Height="*" />
            <RowDefinition Height="45" />
        </Grid.RowDefinitions>
        <Border Grid.Row="0"
                Margin="10,2,10,0">
            <Grid>
                <Grid.RowDefinitions>
                    <RowDefinition Height="40" />
                    <RowDefinition Height="Auto" />
                    <RowDefinition Height="*" />
                </Grid.RowDefinitions>
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="*" />
                    <ColumnDefinition Width="35" />
                </Grid.ColumnDefinitions>
                <TextBox x:Name="userInputTextBox"
                         Text="{Binding UserInputString, RelativeSource={RelativeSource AncestorType=Window}, UpdateSourceTrigger=PropertyChanged}"
                         Grid.Row="0"
                         Grid.Column="0"
                         VerticalContentAlignment="Center"
                         Margin="0,5,5,5"
                         MouseDoubleClick="UserInputTextBox_MouseDoubleClick">
                    <TextBox.Style>
                        <Style TargetType="TextBox"
                               xmlns:sys="clr-namespace:System;assembly=mscorlib">
                            <Style.Resources>
                                <Style TargetType="Border">
                                    <Setter Property="CornerRadius"
                                            Value="3" />
                                </Style>
                                <VisualBrush x:Key="CueBannerBrush"
                                             AlignmentX="Left"
                                             AlignmentY="Center"
                                             Stretch="None">
                                    <VisualBrush.Visual>
                                        <Label Content="Enter an URL to add a game to the collection or enter search query to filter the collection"
                                               Foreground="Gray" />
                                    </VisualBrush.Visual>
                                </VisualBrush>
                            </Style.Resources>
                            <Style.Triggers>
                                <Trigger Property="Text"
                                         Value="{x:Static sys:String.Empty}">
                                    <Setter Property="Background"
                                            Value="{StaticResource CueBannerBrush}" />
                                </Trigger>
                                <Trigger Property="Text"
                                         Value="{x:Null}">
                                    <Setter Property="Background"
                                            Value="{StaticResource CueBannerBrush}" />
                                </Trigger>
                                <Trigger Property="IsKeyboardFocused"
                                         Value="True">
                                    <Setter Property="Background"
                                            Value="White" />
                                </Trigger>
                            </Style.Triggers>

                        </Style>
                    </TextBox.Style>
                </TextBox>
                <Button Grid.Row="0"
                        Grid.Column="1"
                        Margin="5,5,0,5"
                        VerticalAlignment="Bottom"
                        Command="{x:Static local:F95UpdatesCheckerCommands.AddGameInfoCommand}">
                    <Button.Content>
                        <Image Source="{StaticResource icon_Add}"
                               Margin="3" />
                    </Button.Content>
                    <Button.Style>
                        <Style TargetType="Button"
                               BasedOn="{StaticResource buttonStyle}">
                            <Style.Triggers>
                                <DataTrigger Binding="{Binding IsEnabled, RelativeSource={RelativeSource Self}}"
                                             Value="True">
                                    <DataTrigger.EnterActions>
                                        <BeginStoryboard>
                                            <Storyboard Storyboard.TargetProperty="Background.Color"
                                                        RepeatBehavior="Forever"
                                                        AutoReverse="True">
                                                <ColorAnimation From="Gray"
                                                                To="White"
                                                                Duration="0:0:0.5" />
                                            </Storyboard>
                                        </BeginStoryboard>
                                    </DataTrigger.EnterActions>
                                    <DataTrigger.ExitActions>
                                        <BeginStoryboard>
                                            <Storyboard FillBehavior="Stop">
                                                <ColorAnimation Storyboard.TargetProperty="Background.Color"
                                                                To="White"
                                                                Duration="0:0:0.5" />
                                            </Storyboard>
                                        </BeginStoryboard>
                                    </DataTrigger.ExitActions>
                                </DataTrigger>
                            </Style.Triggers>
                        </Style>
                    </Button.Style>
                </Button>

                <ListView x:Name="gameInfoViewModelsListView"
                          Grid.Row="2"
                          Grid.Column="0"
                          Grid.ColumnSpan="3"
                          Margin="0,5,0,0"
                          BorderThickness="0"
                          ItemsSource="{Binding GameInfoViewModelsCollection, RelativeSource={RelativeSource AncestorType=Window}}"
                          ScrollViewer.HorizontalScrollBarVisibility="Disabled"
                          MouseDown="GameInfoViewModelsListView_MouseDown"
                          VirtualizingPanel.ScrollUnit='Pixel'
                          VirtualizingStackPanel.IsVirtualizing="True"
                          VirtualizingStackPanel.VirtualizationMode="Recycling"
                          ScrollViewer.CanContentScroll="False">
                    <ListView.View>
                        <GridView x:Name="gridView"
                                  AllowsColumnReorder="False">
                            <GridView.ColumnHeaderContainerStyle>
                                <Style TargetType="{x:Type GridViewColumnHeader}">
                                    <Setter Property="IsEnabled"
                                            Value="False" />
                                    <Setter Property="Height"
                                            Value="20" />
                                    <Style.Triggers>
                                        <Trigger Property="IsEnabled"
                                                 Value="False">
                                            <Setter Property="TextElement.Foreground"
                                                    Value="Black" />
                                        </Trigger>
                                    </Style.Triggers>
                                </Style>
                            </GridView.ColumnHeaderContainerStyle>
                            <GridView.Columns>
                                <GridViewColumn x:Name="nameColumn"
                                                Header="Name"
                                                Width="{Binding ElementName=nameColumnHelperGrid, Path=ActualWidth}">
                                    <GridViewColumn.CellTemplate>
                                        <DataTemplate>
                                            <TextBlock Text="{Binding Name}"
                                                       VerticalAlignment="Center"
                                                       HorizontalAlignment="Center"
                                                       FontSize="16"
                                                       ToolTipService.InitialShowDelay="0"
                                                       ToolTipService.ShowDuration="9999999"
                                                       TextTrimming="CharacterEllipsis">
                                                <TextBlock.ToolTip>
                                                    <TextBlock Text="{Binding Name}" />
                                                </TextBlock.ToolTip>
                                                <TextBlock.Style>
                                                    <Style TargetType="TextBlock">
                                                        <Setter Property="FontWeight"
                                                                Value="Normal" />
                                                        <Style.Triggers>
                                                            <DataTrigger Binding="{Binding IsFavorite}"
                                                                         Value="True">
                                                                <Setter Property="FontWeight"
                                                                        Value="Bold" />
                                                            </DataTrigger>
                                                        </Style.Triggers>
                                                    </Style>
                                                </TextBlock.Style>
                                            </TextBlock>
                                        </DataTemplate>
                                    </GridViewColumn.CellTemplate>
                                </GridViewColumn>
                                <GridViewColumn x:Name="groupColumn"
                                                Header="Group"
                                                Width="{Binding ElementName=groupColumnHelperGrid, Path=ActualWidth}">
                                    <GridViewColumn.CellTemplate>
                                        <DataTemplate>
                                            <TextBox x:Name="groupTextbox"
                                                     Text="{Binding Group, UpdateSourceTrigger=PropertyChanged, Mode=OneWay}"
                                                     VerticalAlignment="Center"
                                                     HorizontalAlignment="Center"
                                                     IsReadOnly="True"
                                                     MouseDoubleClick="GroupTextbox_MouseDoubleClick"
                                                     KeyDown="GroupTextbox_KeyDown"
                                                     MinWidth="180"
                                                     HorizontalContentAlignment="Center"
                                                     IsInactiveSelectionHighlightEnabled="False"
                                                     AcceptsReturn="False"
                                                     AcceptsTab="False"
                                                     LostFocus="GroupTextbox_LostFocus">
                                                <TextBox.Style>
                                                    <Style TargetType="TextBox"
                                                           BasedOn="{StaticResource editableField}">
                                                        <Setter Property="FontWeight"
                                                                Value="Normal" />
                                                        <Style.Triggers>
                                                            <DataTrigger Binding="{Binding IsFavorite}"
                                                                         Value="True">
                                                                <Setter Property="FontWeight"
                                                                        Value="Bold" />
                                                            </DataTrigger>
                                                        </Style.Triggers>
                                                    </Style>
                                                </TextBox.Style>
                                            </TextBox>
                                        </DataTemplate>
                                    </GridViewColumn.CellTemplate>
                                </GridViewColumn>
                                <GridViewColumn x:Name="getLatestVersionColumn"
                                                Header="Check"
                                                Width="{Binding ElementName=getLatestVersionColumnHelperGrid, Path=ActualWidth}">
                                    <GridViewColumn.CellTemplate>
                                        <DataTemplate>
                                            <Button Style="{StaticResource buttonStyle}"
                                                    HorizontalAlignment="Center"
                                                    Command="{x:Static local:F95UpdatesCheckerCommands.GetLatestGameVersionCommand}"
                                                    CommandParameter="{Binding .}"
                                                    ToolTipService.InitialShowDelay="0"
                                                    ToolTipService.ShowDuration="9999999">
                                                <Button.ToolTip>
                                                    <TextBlock>
                                                        <Run Text="Check for updates" />
                                                        <LineBreak />
                                                        <Run Text="Last checked:"
                                                             FontStyle="Italic" />
                                                        <Run Text="{Binding LastChecked}"
                                                             FontStyle="Italic" />
                                                        <LineBreak />
                                                        <Run Text="Version when last checked:"
                                                             FontStyle="Italic" />
                                                        <Run Text="{Binding LastCheckedVersion}"
                                                             FontStyle="Italic" />
                                                    </TextBlock>
                                                </Button.ToolTip>

                                                <Button.Content>
                                                    <Image Source="{StaticResource icon_CheckUpdates}"
                                                           Margin="3" />
                                                </Button.Content>
                                            </Button>
                                        </DataTemplate>
                                    </GridViewColumn.CellTemplate>
                                </GridViewColumn>
                                <GridViewColumn x:Name="latestVersionColumn"
                                                Header="Latest version"
                                                Width="{Binding ElementName=latestVersionColumnHelperGrid, Path=ActualWidth}">
                                    <GridViewColumn.CellTemplate>
                                        <DataTemplate>
                                            <TextBlock Text="{Binding LatestVersion}"
                                                       VerticalAlignment="Center"
                                                       HorizontalAlignment="Center" />
                                        </DataTemplate>
                                    </GridViewColumn.CellTemplate>
                                </GridViewColumn>
                                <GridViewColumn x:Name="syncColumn"
                                                Header="Sync"
                                                Width="{Binding ElementName=syncColumnHelperGrid, Path=ActualWidth}">
                                    <GridViewColumn.CellTemplate>
                                        <DataTemplate>
                                            <Button Style="{StaticResource buttonStyle}"
                                                    HorizontalAlignment="Center"
                                                    ToolTip="Sync with latest version"
                                                    Command="{x:Static local:F95UpdatesCheckerCommands.SyncGameVersionsCommand}"
                                                    CommandParameter="{Binding .}">
                                                <Button.Content>
                                                    <Image Source="{StaticResource icon_Sync}"
                                                           Margin="3" />
                                                </Button.Content>
                                            </Button>
                                        </DataTemplate>
                                    </GridViewColumn.CellTemplate>
                                </GridViewColumn>
                                <GridViewColumn x:Name="currentVersionColumn"
                                                Header="Current version"
                                                Width="{Binding ElementName=currentVersionColumnHelperGrid, Path=ActualWidth}">
                                    <GridViewColumn.CellTemplate>
                                        <DataTemplate>
                                            <TextBox x:Name="currentVersionTextBox"
                                                     Text="{Binding CurrentVersion, UpdateSourceTrigger=PropertyChanged, Mode=OneWay}"
                                                     VerticalAlignment="Center"
                                                     HorizontalAlignment="Center"
                                                     Style="{StaticResource editableField}"
                                                     IsReadOnly="True"
                                                     MinWidth="180"
                                                     HorizontalContentAlignment="Center"
                                                     MouseDoubleClick="CurrentVersionTextBox_MouseDoubleClick"
                                                     KeyDown="CurrentVersionTextBox_KeyDown"
                                                     IsInactiveSelectionHighlightEnabled="False"
                                                     AcceptsReturn="False"
                                                     AcceptsTab="False"
                                                     LostFocus="CurrentVersionTextBox_LostFocus" />
                                        </DataTemplate>
                                    </GridViewColumn.CellTemplate>
                                </GridViewColumn>
                                <GridViewColumn x:Name="versionFinishedColumn"
                                                Header="Finished"
                                                Width="{Binding ElementName=versionFinishedColumnHelperGrid, Path=ActualWidth}">
                                    <GridViewColumn.CellTemplate>
                                        <DataTemplate>
                                            <CheckBox x:Name="isVersionFinishedCheckBox"
                                                      Content=""
                                                      HorizontalAlignment="Center"
                                                      VerticalAlignment="Center"
                                                      IsChecked="{Binding IsVersionFinished}"
                                                      Checked="IsVersionFinishedCheckBox_Checked"
                                                      Unchecked="IsVersionFinishedCheckBox_Unchecked" />
                                        </DataTemplate>
                                    </GridViewColumn.CellTemplate>
                                </GridViewColumn>
                                <GridViewColumn x:Name="favoriteColumn"
                                                Header="Favorite"
                                                Width="{Binding ElementName=favoriteColumnHelperGrid, Path=ActualWidth}">
                                    <GridViewColumn.CellTemplate>
                                        <DataTemplate>
                                            <CheckBox x:Name="isFavoriteCheckBox"
                                                      Content=""
                                                      HorizontalAlignment="Center"
                                                      VerticalAlignment="Center"
                                                      IsChecked="{Binding IsFavorite}"
                                                      Checked="IsFavoriteCheckBox_Checked"
                                                      Unchecked="IsFavoriteCheckBox_Unchecked" />
                                        </DataTemplate>
                                    </GridViewColumn.CellTemplate>
                                </GridViewColumn>
                                <GridViewColumn x:Name="openColumn"
                                                Header="Open"
                                                Width="98">
                                    <GridViewColumn.CellTemplate>
                                        <DataTemplate>
                                            <Button Style="{StaticResource buttonStyle}"
                                                    HorizontalAlignment="Center"
                                                    ToolTip="Open thread in default browser"
                                                    Command="{x:Static local:F95UpdatesCheckerCommands.OpenInBrowserCommand}"
                                                    CommandParameter="{Binding .}">
                                                <Button.Content>
                                                    <Image Source="{StaticResource icon_Browser}"
                                                           Margin="3" />
                                                </Button.Content>
                                            </Button>
                                        </DataTemplate>
                                    </GridViewColumn.CellTemplate>
                                </GridViewColumn>
                            </GridView.Columns>
                        </GridView>
                    </ListView.View>
                    <ListView.ItemContainerStyle>
                        <Style TargetType="ListViewItem">
                            <Setter Property="HorizontalAlignment"
                                    Value="Stretch" />
                            <Setter Property="HorizontalContentAlignment"
                                    Value="Stretch" />
                            <Setter Property="VerticalAlignment"
                                    Value="Stretch" />
                            <Setter Property="VerticalContentAlignment"
                                    Value="Stretch" />
                            <Setter Property="Foreground"
                                    Value="Black" />
                            <Setter Property="Height"
                                    Value="35" />
                            <Setter Property="ContextMenu">
                                <Setter.Value>
                                    <ContextMenu>
                                        <MenuItem Header="Copy name"
                                                  Command="{x:Static local:F95UpdatesCheckerCommands.CopyNameCommand}"
                                                  CommandParameter="{Binding .}" />
                                        <MenuItem Header="Copy URL"
                                                  Command="{x:Static local:F95UpdatesCheckerCommands.CopyLinkCommand}"
                                                  CommandParameter="{Binding .}" />
                                        <MenuItem Header="Remove"
                                                  Command="{x:Static local:F95UpdatesCheckerCommands.RemoveGameInfoCommand}"
                                                  CommandParameter="{Binding .}" />
                                    </ContextMenu>
                                </Setter.Value>
                            </Setter>
                            <Setter Property="Template">
                                <Setter.Value>
                                    <ControlTemplate TargetType="{x:Type ListViewItem}">
                                        <Border BorderBrush="{TemplateBinding BorderBrush}"
                                                BorderThickness="{TemplateBinding BorderThickness}"
                                                Background="{TemplateBinding Background}">
                                            <GridViewRowPresenter HorizontalAlignment="Stretch"
                                                                  VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                                                  Width="Auto"
                                                                  Margin="0"
                                                                  Content="{TemplateBinding Content}" />
                                        </Border>
                                    </ControlTemplate>
                                </Setter.Value>
                            </Setter>
                            <Style.Triggers>
                                <DataTrigger Binding="{Binding AreVersionsMatch}"
                                             Value="True">
                                    <Setter Property="Background"
                                            Value="#E0F3D2" />
                                </DataTrigger>
                                <DataTrigger Binding="{Binding HasCurrentVersion}"
                                             Value="False">
                                    <Setter Property="Background"
                                            Value="#DADAD9" />
                                </DataTrigger>
                                <MultiDataTrigger>
                                    <MultiDataTrigger.Conditions>
                                        <Condition Binding="{Binding AreVersionsMatch}"
                                                   Value="False" />
                                        <Condition Binding="{Binding HasCurrentVersion}"
                                                   Value="True" />
                                    </MultiDataTrigger.Conditions>
                                    <MultiDataTrigger.Setters>
                                        <Setter Property="Background"
                                                Value="#FCF4E3" />
                                    </MultiDataTrigger.Setters>
                                </MultiDataTrigger>
                            </Style.Triggers>
                        </Style>
                    </ListView.ItemContainerStyle>
                    <ListView.GroupStyle>
                        <GroupStyle>
                            <GroupStyle.ContainerStyle>
                                <Style TargetType="{x:Type GroupItem}">
                                    <Setter Property="Template">
                                        <Setter.Value>
                                            <ControlTemplate>
                                                <Expander IsExpanded="True"
                                                          Style="{StaticResource GroupExpander}">
                                                    <i:Interaction.Behaviors>
                                                        <local:PersistGroupExpandedStateBehavior GroupName="{Binding Name}" />
                                                    </i:Interaction.Behaviors>
                                                    <Expander.Header>
                                                        <StackPanel Orientation="Horizontal">
                                                            <TextBlock FontWeight="Bold"
                                                                       Foreground="Black"
                                                                       FontSize="16"
                                                                       VerticalAlignment="Center"
                                                                       HorizontalAlignment="Center"
                                                                       Margin="0,0,0,0">
                                                                    <Run Text="{Binding Name, Mode=OneWay}" />
                                                                    <Run Text="(" /><Run Text="{Binding ItemCount, Mode=OneWay}" /><Run Text=")" />
                                                            </TextBlock>
                                                        </StackPanel>
                                                    </Expander.Header>
                                                    <ItemsPresenter />
                                                </Expander>
                                            </ControlTemplate>
                                        </Setter.Value>
                                    </Setter>
                                </Style>
                            </GroupStyle.ContainerStyle>
                        </GroupStyle>
                    </ListView.GroupStyle>
                </ListView>

                <!-- Hidden grid for GridView resizing -->
                <Grid Grid.Row="2"
                      Grid.Column="0"
                      Grid.ColumnSpan="2"
                      Margin="10,5,0,0"
                      Visibility="Hidden">
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="*" />
                        <ColumnDefinition Width="200" />
                        <ColumnDefinition Width="60" />
                        <ColumnDefinition Width="200" />
                        <ColumnDefinition Width="60" />
                        <ColumnDefinition Width="200" />
                        <ColumnDefinition Width="90" />
                        <ColumnDefinition Width="90" />
                        <ColumnDefinition Width="90" />
                    </Grid.ColumnDefinitions>
                    <!-- This are the hidden helper grids which are used to bind to -->
                    <Grid Grid.Column="0"
                          x:Name="nameColumnHelperGrid"
                          MinWidth="200" />
                    <Grid Grid.Column="1"
                          x:Name="groupColumnHelperGrid" />
                    <Grid Grid.Column="2"
                          x:Name="getLatestVersionColumnHelperGrid" />
                    <Grid Grid.Column="3"
                          x:Name="latestVersionColumnHelperGrid" />
                    <Grid Grid.Column="4"
                          x:Name="syncColumnHelperGrid" />
                    <Grid Grid.Column="5"
                          x:Name="currentVersionColumnHelperGrid" />
                    <Grid Grid.Column="6"
                          x:Name="versionFinishedColumnHelperGrid" />
                    <Grid Grid.Column="7"
                          x:Name="favoriteColumnHelperGrid" />
                    <Grid Grid.Column="8"
                          x:Name="openColumnHelperGrid" />
                </Grid>
            </Grid>
        </Border>
        <Grid Grid.Row="1"
              DataContext="{Binding ., RelativeSource={RelativeSource AncestorType=Window}}">
            <Grid>
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="*" />
                    <ColumnDefinition Width="*" />
                </Grid.ColumnDefinitions>
                <StackPanel Grid.Column="0"
                            Orientation="Horizontal"
                            HorizontalAlignment="Left">
                    <Button Style="{StaticResource buttonStyle}"
                            Margin="10,0,5,0"
                            HorizontalAlignment="Center"
                            VerticalAlignment="Center"
                            Command="{x:Static local:F95UpdatesCheckerCommands.CollapseGroupsCommand}"
                            ToolTip="Collapse">
                        <Button.Content>
                            <Image Source="{StaticResource icon_Collapse}"
                                   Margin="3" />
                        </Button.Content>
                    </Button>
                    <Button Style="{StaticResource buttonStyle}"
                            Margin="5,0,10,0"
                            HorizontalAlignment="Center"
                            VerticalAlignment="Center"
                            Command="{x:Static local:F95UpdatesCheckerCommands.ExpandGroupsCommand}"
                            ToolTip="Expand">
                        <Button.Content>
                            <Image Source="{StaticResource icon_Expand}"
                                   Margin="3" />
                        </Button.Content>
                    </Button>
                    <StackPanel Orientation="Horizontal"
                                Margin="10,0,0,0">
                        <ComboBox Style="{DynamicResource RoundedComboBoxStyle}"
                                  x:Name="sortOrderComboBox"
                                  Height="31"
                                  MinWidth="130"
                                  Margin="0,0,0,0"
                                  HorizontalContentAlignment="Center"
                                  VerticalContentAlignment="Center"
                                  SelectedIndex="0"
                                  ItemsSource="{Binding SortOrders}"
                                  SelectedItem="{Binding SortOrder}">
                            <ComboBox.ItemTemplate>
                                <DataTemplate>
                                    <TextBlock Text="{Binding Converter={StaticResource SortOrderToStringConverter}}" />
                                </DataTemplate>
                            </ComboBox.ItemTemplate>
                        </ComboBox>
                        <StackPanel Orientation="Vertical"
                                    Margin="17,0,0,0"
                                    VerticalAlignment="Center"
                                    HorizontalAlignment="Center">
                            <CheckBox Style="{DynamicResource RoundedCheckBoxStyle}"
                                      Content="Prioritize favorites"
                                      IsChecked="{Binding GivePriorityToFavoritesWhileSorting}"
                                      VerticalAlignment="Center" />
                            <CheckBox x:Name="useDarkThemeCheckBox"
                                      Style="{DynamicResource RoundedCheckBoxStyle}"
                                      Content="Use dark theme"
                                      Visibility="Collapsed"
                                      IsChecked="{Binding IsDarkThemeEnabled}"
                                      Checked="UseDarkThemeCheckBox_Checked"
                                      Unchecked="UseDarkThemeCheckBox_Unchecked"
                                      VerticalAlignment="Center" />
                        </StackPanel>
                    </StackPanel>
                </StackPanel>

                <StackPanel Grid.Column="1"
                            Orientation="Horizontal"
                            HorizontalAlignment="Right">
                    <Button Margin="10,0,5,0"
                            VerticalAlignment="Center"
                            Command="{x:Static local:F95UpdatesCheckerCommands.SaveGameInfoCollection}"
                            ToolTip="Save games collection"
                            Visibility="{Binding HaveChanges, ElementName=mainWindow, Converter={StaticResource BoolToVisibilityConverter}}">
                        <Button.Content>
                            <Image Source="{StaticResource icon_Save}"
                                   Margin="3" />
                        </Button.Content>
                        <Button.Style>
                            <Style TargetType="Button"
                                   BasedOn="{StaticResource buttonStyle}">
                                <Style.Triggers>
                                    <DataTrigger Binding="{Binding HaveChanges, ElementName=mainWindow}"
                                                 Value="True">
                                        <DataTrigger.EnterActions>
                                            <BeginStoryboard>
                                                <Storyboard Storyboard.TargetProperty="Background.Color"
                                                            RepeatBehavior="Forever"
                                                            AutoReverse="True">
                                                    <ColorAnimation From="Gray"
                                                                    To="White"
                                                                    Duration="0:0:0.5" />
                                                </Storyboard>
                                            </BeginStoryboard>
                                        </DataTrigger.EnterActions>
                                        <DataTrigger.ExitActions>
                                            <BeginStoryboard>
                                                <Storyboard FillBehavior="Stop">
                                                    <ColorAnimation Storyboard.TargetProperty="Background.Color"
                                                                    To="White"
                                                                    Duration="0:0:0.5" />
                                                </Storyboard>
                                            </BeginStoryboard>
                                        </DataTrigger.ExitActions>
                                    </DataTrigger>
                                </Style.Triggers>
                            </Style>
                        </Button.Style>
                    </Button>
                    <Button x:Name="getLatestGameVersionsButton"
                            Margin="5,0,10,0"
                            HorizontalAlignment="Right"
                            VerticalAlignment="Center"
                            Command="{x:Static local:F95UpdatesCheckerCommands.GetLatestGameVersionsCommand}"
                            ToolTipService.ShowDuration="99999999"
                            ToolTipService.InitialShowDelay="0">
                        <Button.ToolTip>
                            <TextBlock>
                                <Run Text="Check for updates" />
                                <LineBreak />
                                <Run Text="Last checked:"
                                     FontStyle="Italic" />
                                <Run Text="{Binding LastChecked}"
                                     FontStyle="Italic" />
                            </TextBlock>
                        </Button.ToolTip>
                        <Button.Style>
                            <Style TargetType="Button"
                                   BasedOn="{StaticResource buttonStyle}">
                                <Setter Property="Content">
                                    <Setter.Value>
                                        <Image Source="{StaticResource icon_CheckUpdates}"
                                               Margin="3" />
                                    </Setter.Value>
                                </Setter>
                                <Style.Triggers>
                                    <DataTrigger Binding="{Binding GetLatestVersionsRunning, RelativeSource={RelativeSource AncestorType=Window}}"
                                                 Value="True">
                                        <Setter Property="Content">
                                            <Setter.Value>
                                                <Image Source="{StaticResource icon_Stop}"
                                                       Margin="3" />
                                            </Setter.Value>
                                        </Setter>
                                    </DataTrigger>
                                </Style.Triggers>
                            </Style>
                        </Button.Style>
                    </Button>
                </StackPanel>
            </Grid>
            <ProgressBar Minimum="0"
                         Maximum="{Binding GameInfoViewModelsCollection.Count}"
                         Height="5"
                         VerticalAlignment="Bottom"
                         local:ProgressBarSmoother.SmoothValue="{Binding CurrentlyUpdatingGameInfoIndex, Mode=OneWay}">
                <ProgressBar.Style>
                    <Style TargetType="ProgressBar">
                        <Setter Property="Visibility"
                                Value="Visible" />
                        <Style.Triggers>
                            <DataTrigger Binding="{Binding CurrentlyUpdatingGameInfoIndex}"
                                         Value="0">
                                <Setter Property="Visibility"
                                        Value="Collapsed" />
                            </DataTrigger>
                        </Style.Triggers>
                    </Style>
                </ProgressBar.Style>
            </ProgressBar>
        </Grid>
    </Grid>
</Window>
